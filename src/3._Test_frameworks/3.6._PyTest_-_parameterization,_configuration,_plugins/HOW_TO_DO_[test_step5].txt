1.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
В общем, если никак не получается, воспользуйтесь подсказкой:
​
1. копируем прошлый код (хоть с классом, хоть без)
​
2. parametrize меняем на свои значения. (шаблон прошлого теста намекает как его надо скорректировать)
​
3. корректируем url согласно заданию (шаблон прошлого теста намекает как его надо скорректировать)
​
4. добавляем ожидание (на прошлых уроках проходили, подойдет и явное и не явное ожидание)
​
5. производим поиск поля для ввода
​
6. вводим туда указанную в задании математическую формулу (преобразовать ее в нужный формат не забываем)
​
7. ищем и нажимаем на кнопку
​
8. ищем ответ в появившемся блоке и записываем его в переменную
​
9. эту переменную сравниваем с "Correct!" (если сравнение будет не верным, мы увидем ошибку, а точнее текст который не совпал)
​
10. запускаем Тест, в тех местах где будет ошибка, копируем отрывки предложения, соединяем их в месте и вводим в ответ. (да можно сделать соединение текста всех ошибок и вывести одним текстом, но надо ли оно?)
​
p/s
​
надеюсь не запинаете меня за подсказку, я сам долго мучился пока не понял как что делать и многое нашел в ответах но в разных местах.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
​
​
​
​
​
2.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Структура
​
1. Фикстура browser. как в предыдущих примерах.
​
2. Класс который начинается на Test. Как в предыдущих примерах.
​
3. Внутри класса 2 переменные: 1. пустая для сообщения = "".  2. массив со списком адресов 
​
4.Внутри класса также есть функция с parametrize('название переменной для исползования внутри этой функции= неважно какое но желательно подходящее по смыслу я назову links', "название переменой масива со списком адресов") похожее на предыдущий урок
​
5. Эта функция тест поэтому название функции должно начинаться на test_
​
6. Эта функция получает self, browser, и название переменной для исползования внутри этой функции( с 4 пункта ' ' я назову links например)
​
Внутри функции:
​
7.  Первые 2 строчки как в предыдущем примере 2 предпоследние с небольшим изменением в link
​
8. browser.implicity_wait(10)
​
9. Ищем textarea
​
10. Записываем в неё через  send_key(str(math.log(int(time.time())))  с примера
​
11. Через WebDriverWait EC.element_to_be_clickable находим класс кнопку
​
12. нажимаем на кнопку
​
13. Через WebDriverWait EC.visibility_of_element_located().text находим класс сообщения и текст его присваиваем переменной
​
14. Проверяем не равен ли он !="Correct!"
​
15. если не равен то добавляем в переменную с 4 пункта посредством self. название переменной += с пункта 13 пунк переменная и print()
​
16. assert с пункта13  переменная == False проверяем
​
17.  
​
if __name__ == "__main__":
​
    unittest.main()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
